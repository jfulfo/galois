// church nat
def ctrue(x, y) {
    x;
}

def cfalse(x, y) {
    y;
}

def zero(f, x) {
    x;
}

def is_zero(n) {
    def always_false(x) {
        cfalse;
    }
    n(always_false, ctrue);
}

def succ(n) {
    def succ_inner(f, x) {
        f(n(f, x));
    }
    succ_inner;
}

def add(m, n) {
    def add_inner(f, x) {
        m(f, n(f, x));
    }
    add_inner;
}

def mult(m, n) {
    def mult_inner(f, x) {
        m(n(f), x);
    }
    return mult_inner;
}

def one() {
    return succ(zero);
}

def two() {
    return succ(one());
}

def three() {
    return succ(two());
}

def id(x) {
    x;
}

def pair(a, b) {
    def pair_inner(f) {
        f(a, b);
    }
    pair_inner;
}

def first(p) {
    p(ctrue);
}

def second(p) {
    p(cfalse);
}

def pred(n) {
    def pred_inner(f, x) {
        def g(p) {
            pair(f(first(p)), first(p));
        }
        second(n(g, pair(x, x)));
    }
    pred_inner;
}

nat = pred(add(one(), zero));
is_zero(nat);
